// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    onClose={[MockFunction]}
    onItemSelect={[MockFunction]}
    position={
      Object {
        "coords": Object {
          "latitude": 50,
          "longitude": 20,
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Component
            style={
              Object {
                "flex": 0,
              }
            }
          >
            <Button
              iconName="back"
              onPress={[MockFunction]}
            />
          </Component>
          <Component
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoFocus={true}
              onChangeText={[Function]}
              placeholder="City / POI"
              style={
                Object {
                  "marginRight": 10,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            />
          </Component>
        </Component>,
        false,
      ],
      "style": Object {
        "backgroundColor": "#fff",
        "opacity": 0.95,
        "padding": 10,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <Button
                iconName="back"
                onPress={[MockFunction]}
              />
            </Component>,
            <Component
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />
            </Component>,
          ],
          "style": Object {
            "flexDirection": "row",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Button
                iconName="back"
                onPress={[MockFunction]}
              />,
              "style": Object {
                "flex": 0,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "iconName": "back",
                "onPress": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />,
              "style": Object {
                "flex": 1,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoFocus": true,
                "onChangeText": [Function],
                "placeholder": "City / POI",
                "style": Object {
                  "marginRight": 10,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Component
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <Button
                iconName="back"
                onPress={[MockFunction]}
              />
            </Component>
            <Component
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />
            </Component>
          </Component>,
          false,
        ],
        "style": Object {
          "backgroundColor": "#fff",
          "opacity": 0.95,
          "padding": 10,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "flex": 0,
                  }
                }
              >
                <Button
                  iconName="back"
                  onPress={[MockFunction]}
                />
              </Component>,
              <Component
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <TextInput
                  autoFocus={true}
                  onChangeText={[Function]}
                  placeholder="City / POI"
                  style={
                    Object {
                      "marginRight": 10,
                      "paddingBottom": 10,
                      "paddingTop": 10,
                    }
                  }
                />
              </Component>,
            ],
            "style": Object {
              "flexDirection": "row",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Button
                  iconName="back"
                  onPress={[MockFunction]}
                />,
                "style": Object {
                  "flex": 0,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "back",
                  "onPress": [MockFunction],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TextInput
                  autoFocus={true}
                  onChangeText={[Function]}
                  placeholder="City / POI"
                  style={
                    Object {
                      "marginRight": 10,
                      "paddingBottom": 10,
                      "paddingTop": 10,
                    }
                  }
                />,
                "style": Object {
                  "flex": 1,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoFocus": true,
                  "onChangeText": [Function],
                  "placeholder": "City / POI",
                  "style": Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`matches snapshot for result item 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResultItem
    item={
      Object {
        "description": "some description",
        "structured_formatting": Object {
          "main_text": "some text",
        },
      }
    }
    onItemSelect={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "activeOpacity": 0.2,
      "children": Array [
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={Object {}}
        >
          some text
        </Text>,
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#ccc",
            }
          }
        >
          some description
        </Text>,
      ],
      "onPress": [Function],
      "style": Object {
        "marginTop": 10,
        "paddingTop": 10,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "some text",
          "ellipsizeMode": "tail",
          "style": Object {},
        },
        "ref": null,
        "rendered": "some text",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "some description",
          "ellipsizeMode": "tail",
          "style": Object {
            "color": "#ccc",
          },
        },
        "ref": null,
        "rendered": "some description",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.2,
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={Object {}}
          >
            some text
          </Text>,
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#ccc",
              }
            }
          >
            some description
          </Text>,
        ],
        "onPress": [Function],
        "style": Object {
          "marginTop": 10,
          "paddingTop": 10,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "some text",
            "ellipsizeMode": "tail",
            "style": Object {},
          },
          "ref": null,
          "rendered": "some text",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "some description",
            "ellipsizeMode": "tail",
            "style": Object {
              "color": "#ccc",
            },
          },
          "ref": null,
          "rendered": "some description",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`should handle user input correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    onClose={[MockFunction]}
    onItemSelect={[MockFunction]}
    position={
      Object {
        "coords": Object {
          "latitude": 50,
          "longitude": 20,
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Component
            style={
              Object {
                "flex": 0,
              }
            }
          >
            <Button
              iconName="back"
              onPress={[MockFunction]}
            />
          </Component>
          <Component
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoFocus={true}
              onChangeText={[Function]}
              placeholder="City / POI"
              style={
                Object {
                  "marginRight": 10,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            />
          </Component>
        </Component>,
        false,
      ],
      "style": Object {
        "backgroundColor": "#fff",
        "opacity": 0.95,
        "padding": 10,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <Button
                iconName="back"
                onPress={[MockFunction]}
              />
            </Component>,
            <Component
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />
            </Component>,
          ],
          "style": Object {
            "flexDirection": "row",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Button
                iconName="back"
                onPress={[MockFunction]}
              />,
              "style": Object {
                "flex": 0,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "iconName": "back",
                "onPress": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />,
              "style": Object {
                "flex": 1,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoFocus": true,
                "onChangeText": [Function],
                "placeholder": "City / POI",
                "style": Object {
                  "marginRight": 10,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Component
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <Button
                iconName="back"
                onPress={[MockFunction]}
              />
            </Component>
            <Component
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />
            </Component>
          </Component>,
          false,
        ],
        "style": Object {
          "backgroundColor": "#fff",
          "opacity": 0.95,
          "padding": 10,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "flex": 0,
                  }
                }
              >
                <Button
                  iconName="back"
                  onPress={[MockFunction]}
                />
              </Component>,
              <Component
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <TextInput
                  autoFocus={true}
                  onChangeText={[Function]}
                  placeholder="City / POI"
                  style={
                    Object {
                      "marginRight": 10,
                      "paddingBottom": 10,
                      "paddingTop": 10,
                    }
                  }
                />
              </Component>,
            ],
            "style": Object {
              "flexDirection": "row",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Button
                  iconName="back"
                  onPress={[MockFunction]}
                />,
                "style": Object {
                  "flex": 0,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "back",
                  "onPress": [MockFunction],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TextInput
                  autoFocus={true}
                  onChangeText={[Function]}
                  placeholder="City / POI"
                  style={
                    Object {
                      "marginRight": 10,
                      "paddingBottom": 10,
                      "paddingTop": 10,
                    }
                  }
                />,
                "style": Object {
                  "flex": 1,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoFocus": true,
                  "onChangeText": [Function],
                  "placeholder": "City / POI",
                  "style": Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`should handle user input correctly 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    onClose={[MockFunction]}
    onItemSelect={[MockFunction]}
    position={
      Object {
        "coords": Object {
          "latitude": 50,
          "longitude": 20,
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <Component
            style={
              Object {
                "flex": 0,
              }
            }
          >
            <Button
              iconName="back"
              onPress={[MockFunction]}
            />
          </Component>
          <Component
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <TextInput
              autoFocus={true}
              onChangeText={[Function]}
              placeholder="City / POI"
              style={
                Object {
                  "marginRight": 10,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            />
          </Component>
        </Component>,
        <Component
          style={
            Object {
              "borderTopColor": "#eee",
              "borderTopWidth": 1,
              "margin": 10,
            }
          }
        >
          <FlatList
            data={
              Array [
                Object {
                  "description": "Paris, France",
                  "id": "691b237b0322f28988f3ce03e321ff72a12167fd",
                  "matched_substrings": Array [
                    Object {
                      "length": 5,
                      "offset": 0,
                    },
                  ],
                  "place_id": "ChIJD7fiBh9u5kcRYJSMaMOCCwQ",
                  "reference": "CjQlAAAA_KB6EEceSTfkteSSF6U0pvumHCoLUboRcDlAH05N1pZJLmOQbYmboEi0SwXBSoI2EhAhj249tFDCVh4R-PXZkPK8GhTBmp_6_lWljaf1joVs1SH2ttB_tw",
                  "terms": Array [
                    Object {
                      "offset": 0,
                      "value": "Paris",
                    },
                    Object {
                      "offset": 7,
                      "value": "France",
                    },
                  ],
                  "types": Array [
                    "locality",
                    "political",
                    "geocode",
                  ],
                },
              ]
            }
            disableVirtualization={false}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            keyboardShouldPersistTaps="handled"
            maxToRenderPerBatch={10}
            numColumns={1}
            onEndReachedThreshold={2}
            renderItem={[Function]}
            scrollEventThrottle={50}
            updateCellsBatchingPeriod={50}
            windowSize={21}
          />
        </Component>,
      ],
      "style": Object {
        "backgroundColor": "#fff",
        "opacity": 0.95,
        "padding": 10,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <Button
                iconName="back"
                onPress={[MockFunction]}
              />
            </Component>,
            <Component
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />
            </Component>,
          ],
          "style": Object {
            "flexDirection": "row",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Button
                iconName="back"
                onPress={[MockFunction]}
              />,
              "style": Object {
                "flex": 0,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "iconName": "back",
                "onPress": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />,
              "style": Object {
                "flex": 1,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoFocus": true,
                "onChangeText": [Function],
                "placeholder": "City / POI",
                "style": Object {
                  "marginRight": 10,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <FlatList
            data={
              Array [
                Object {
                  "description": "Paris, France",
                  "id": "691b237b0322f28988f3ce03e321ff72a12167fd",
                  "matched_substrings": Array [
                    Object {
                      "length": 5,
                      "offset": 0,
                    },
                  ],
                  "place_id": "ChIJD7fiBh9u5kcRYJSMaMOCCwQ",
                  "reference": "CjQlAAAA_KB6EEceSTfkteSSF6U0pvumHCoLUboRcDlAH05N1pZJLmOQbYmboEi0SwXBSoI2EhAhj249tFDCVh4R-PXZkPK8GhTBmp_6_lWljaf1joVs1SH2ttB_tw",
                  "terms": Array [
                    Object {
                      "offset": 0,
                      "value": "Paris",
                    },
                    Object {
                      "offset": 7,
                      "value": "France",
                    },
                  ],
                  "types": Array [
                    "locality",
                    "political",
                    "geocode",
                  ],
                },
              ]
            }
            disableVirtualization={false}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            keyboardShouldPersistTaps="handled"
            maxToRenderPerBatch={10}
            numColumns={1}
            onEndReachedThreshold={2}
            renderItem={[Function]}
            scrollEventThrottle={50}
            updateCellsBatchingPeriod={50}
            windowSize={21}
          />,
          "style": Object {
            "borderTopColor": "#eee",
            "borderTopWidth": 1,
            "margin": 10,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data": Array [
              Object {
                "description": "Paris, France",
                "id": "691b237b0322f28988f3ce03e321ff72a12167fd",
                "matched_substrings": Array [
                  Object {
                    "length": 5,
                    "offset": 0,
                  },
                ],
                "place_id": "ChIJD7fiBh9u5kcRYJSMaMOCCwQ",
                "reference": "CjQlAAAA_KB6EEceSTfkteSSF6U0pvumHCoLUboRcDlAH05N1pZJLmOQbYmboEi0SwXBSoI2EhAhj249tFDCVh4R-PXZkPK8GhTBmp_6_lWljaf1joVs1SH2ttB_tw",
                "terms": Array [
                  Object {
                    "offset": 0,
                    "value": "Paris",
                  },
                  Object {
                    "offset": 7,
                    "value": "France",
                  },
                ],
                "types": Array [
                  "locality",
                  "political",
                  "geocode",
                ],
              },
            ],
            "disableVirtualization": false,
            "horizontal": false,
            "initialNumToRender": 10,
            "keyExtractor": [Function],
            "keyboardShouldPersistTaps": "handled",
            "maxToRenderPerBatch": 10,
            "numColumns": 1,
            "onEndReachedThreshold": 2,
            "renderItem": [Function],
            "scrollEventThrottle": 50,
            "updateCellsBatchingPeriod": 50,
            "windowSize": 21,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Component
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <Button
                iconName="back"
                onPress={[MockFunction]}
              />
            </Component>
            <Component
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <TextInput
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="City / POI"
                style={
                  Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  }
                }
              />
            </Component>
          </Component>,
          <Component
            style={
              Object {
                "borderTopColor": "#eee",
                "borderTopWidth": 1,
                "margin": 10,
              }
            }
          >
            <FlatList
              data={
                Array [
                  Object {
                    "description": "Paris, France",
                    "id": "691b237b0322f28988f3ce03e321ff72a12167fd",
                    "matched_substrings": Array [
                      Object {
                        "length": 5,
                        "offset": 0,
                      },
                    ],
                    "place_id": "ChIJD7fiBh9u5kcRYJSMaMOCCwQ",
                    "reference": "CjQlAAAA_KB6EEceSTfkteSSF6U0pvumHCoLUboRcDlAH05N1pZJLmOQbYmboEi0SwXBSoI2EhAhj249tFDCVh4R-PXZkPK8GhTBmp_6_lWljaf1joVs1SH2ttB_tw",
                    "terms": Array [
                      Object {
                        "offset": 0,
                        "value": "Paris",
                      },
                      Object {
                        "offset": 7,
                        "value": "France",
                      },
                    ],
                    "types": Array [
                      "locality",
                      "political",
                      "geocode",
                    ],
                  },
                ]
              }
              disableVirtualization={false}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              keyboardShouldPersistTaps="handled"
              maxToRenderPerBatch={10}
              numColumns={1}
              onEndReachedThreshold={2}
              renderItem={[Function]}
              scrollEventThrottle={50}
              updateCellsBatchingPeriod={50}
              windowSize={21}
            />
          </Component>,
        ],
        "style": Object {
          "backgroundColor": "#fff",
          "opacity": 0.95,
          "padding": 10,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "flex": 0,
                  }
                }
              >
                <Button
                  iconName="back"
                  onPress={[MockFunction]}
                />
              </Component>,
              <Component
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <TextInput
                  autoFocus={true}
                  onChangeText={[Function]}
                  placeholder="City / POI"
                  style={
                    Object {
                      "marginRight": 10,
                      "paddingBottom": 10,
                      "paddingTop": 10,
                    }
                  }
                />
              </Component>,
            ],
            "style": Object {
              "flexDirection": "row",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Button
                  iconName="back"
                  onPress={[MockFunction]}
                />,
                "style": Object {
                  "flex": 0,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "back",
                  "onPress": [MockFunction],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TextInput
                  autoFocus={true}
                  onChangeText={[Function]}
                  placeholder="City / POI"
                  style={
                    Object {
                      "marginRight": 10,
                      "paddingBottom": 10,
                      "paddingTop": 10,
                    }
                  }
                />,
                "style": Object {
                  "flex": 1,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoFocus": true,
                  "onChangeText": [Function],
                  "placeholder": "City / POI",
                  "style": Object {
                    "marginRight": 10,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FlatList
              data={
                Array [
                  Object {
                    "description": "Paris, France",
                    "id": "691b237b0322f28988f3ce03e321ff72a12167fd",
                    "matched_substrings": Array [
                      Object {
                        "length": 5,
                        "offset": 0,
                      },
                    ],
                    "place_id": "ChIJD7fiBh9u5kcRYJSMaMOCCwQ",
                    "reference": "CjQlAAAA_KB6EEceSTfkteSSF6U0pvumHCoLUboRcDlAH05N1pZJLmOQbYmboEi0SwXBSoI2EhAhj249tFDCVh4R-PXZkPK8GhTBmp_6_lWljaf1joVs1SH2ttB_tw",
                    "terms": Array [
                      Object {
                        "offset": 0,
                        "value": "Paris",
                      },
                      Object {
                        "offset": 7,
                        "value": "France",
                      },
                    ],
                    "types": Array [
                      "locality",
                      "political",
                      "geocode",
                    ],
                  },
                ]
              }
              disableVirtualization={false}
              horizontal={false}
              initialNumToRender={10}
              keyExtractor={[Function]}
              keyboardShouldPersistTaps="handled"
              maxToRenderPerBatch={10}
              numColumns={1}
              onEndReachedThreshold={2}
              renderItem={[Function]}
              scrollEventThrottle={50}
              updateCellsBatchingPeriod={50}
              windowSize={21}
            />,
            "style": Object {
              "borderTopColor": "#eee",
              "borderTopWidth": 1,
              "margin": 10,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "data": Array [
                Object {
                  "description": "Paris, France",
                  "id": "691b237b0322f28988f3ce03e321ff72a12167fd",
                  "matched_substrings": Array [
                    Object {
                      "length": 5,
                      "offset": 0,
                    },
                  ],
                  "place_id": "ChIJD7fiBh9u5kcRYJSMaMOCCwQ",
                  "reference": "CjQlAAAA_KB6EEceSTfkteSSF6U0pvumHCoLUboRcDlAH05N1pZJLmOQbYmboEi0SwXBSoI2EhAhj249tFDCVh4R-PXZkPK8GhTBmp_6_lWljaf1joVs1SH2ttB_tw",
                  "terms": Array [
                    Object {
                      "offset": 0,
                      "value": "Paris",
                    },
                    Object {
                      "offset": 7,
                      "value": "France",
                    },
                  ],
                  "types": Array [
                    "locality",
                    "political",
                    "geocode",
                  ],
                },
              ],
              "disableVirtualization": false,
              "horizontal": false,
              "initialNumToRender": 10,
              "keyExtractor": [Function],
              "keyboardShouldPersistTaps": "handled",
              "maxToRenderPerBatch": 10,
              "numColumns": 1,
              "onEndReachedThreshold": 2,
              "renderItem": [Function],
              "scrollEventThrottle": 50,
              "updateCellsBatchingPeriod": 50,
              "windowSize": 21,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
