// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MarkerDetails
    marker={
      Object {
        "coordinates": Object {
          "latitude": 55.5,
          "longitude": 11.1,
        },
        "description": "desc",
        "id": "123",
        "title": "title",
      }
    }
    onClose={[MockFunction]}
    onRemove={[MockFunction]}
    onSetAsTarget={[MockFunction]}
    onSetAsWaypoint={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Component>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 14,
                "padding": 5,
              }
            }
          >
            <Icon
              allowFontScaling={false}
              name="place"
              size={12}
            />
            title
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 10,
                "padding": 5,
              }
            }
          >
            desc
          </Text>
          <Component
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Button
              iconName="directions"
              onPress={[Function]}
            />
          </Component>
        </Component>
        <Component>
          <Component
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Button
              iconName="location-off"
              onPress={[Function]}
            />
            <Button
              iconName="close"
              onPress={[MockFunction]}
            />
          </Component>
        </Component>
      </Component>,
      "style": Object {
        "backgroundColor": "rgba(255,255,255,0.8)",
        "padding": 10,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 14,
                  "padding": 5,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                name="place"
                size={12}
              />
              title
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 10,
                  "padding": 5,
                }
              }
            >
              desc
            </Text>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="directions"
                onPress={[Function]}
              />
            </Component>
          </Component>,
          <Component>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="location-off"
                onPress={[Function]}
              />
              <Button
                iconName="close"
                onPress={[MockFunction]}
              />
            </Component>
          </Component>,
        ],
        "style": Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 14,
                    "padding": 5,
                  }
                }
              >
                <Icon
                  allowFontScaling={false}
                  name="place"
                  size={12}
                />
                title
              </Text>,
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 10,
                    "padding": 5,
                  }
                }
              >
                desc
              </Text>,
              <Component
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Button
                  iconName="directions"
                  onPress={[Function]}
                />
              </Component>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": Array [
                  <Icon
                    allowFontScaling={false}
                    name="place"
                    size={12}
                  />,
                  "title",
                ],
                "ellipsizeMode": "tail",
                "style": Object {
                  "fontSize": 14,
                  "padding": 5,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "allowFontScaling": false,
                    "name": "place",
                    "size": 12,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "title",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": "desc",
                "ellipsizeMode": "tail",
                "style": Object {
                  "fontSize": 10,
                  "padding": 5,
                },
              },
              "ref": null,
              "rendered": "desc",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Button
                  iconName="directions"
                  onPress={[Function]}
                />,
                "style": Object {
                  "flexDirection": "row",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "directions",
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="location-off"
                onPress={[Function]}
              />
              <Button
                iconName="close"
                onPress={[MockFunction]}
              />
            </Component>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  iconName="location-off"
                  onPress={[Function]}
                />,
                <Button
                  iconName="close"
                  onPress={[MockFunction]}
                />,
              ],
              "style": Object {
                "flexDirection": "row",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "location-off",
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "close",
                  "onPress": [MockFunction],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Component>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 14,
                  "padding": 5,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                name="place"
                size={12}
              />
              title
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 10,
                  "padding": 5,
                }
              }
            >
              desc
            </Text>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="directions"
                onPress={[Function]}
              />
            </Component>
          </Component>
          <Component>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="location-off"
                onPress={[Function]}
              />
              <Button
                iconName="close"
                onPress={[MockFunction]}
              />
            </Component>
          </Component>
        </Component>,
        "style": Object {
          "backgroundColor": "rgba(255,255,255,0.8)",
          "padding": 10,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 14,
                    "padding": 5,
                  }
                }
              >
                <Icon
                  allowFontScaling={false}
                  name="place"
                  size={12}
                />
                title
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 10,
                    "padding": 5,
                  }
                }
              >
                desc
              </Text>
              <Component
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Button
                  iconName="directions"
                  onPress={[Function]}
                />
              </Component>
            </Component>,
            <Component>
              <Component
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Button
                  iconName="location-off"
                  onPress={[Function]}
                />
                <Button
                  iconName="close"
                  onPress={[MockFunction]}
                />
              </Component>
            </Component>,
          ],
          "style": Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontSize": 14,
                      "padding": 5,
                    }
                  }
                >
                  <Icon
                    allowFontScaling={false}
                    name="place"
                    size={12}
                  />
                  title
                </Text>,
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontSize": 10,
                      "padding": 5,
                    }
                  }
                >
                  desc
                </Text>,
                <Component
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Button
                    iconName="directions"
                    onPress={[Function]}
                  />
                </Component>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": Array [
                    <Icon
                      allowFontScaling={false}
                      name="place"
                      size={12}
                    />,
                    "title",
                  ],
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "fontSize": 14,
                    "padding": 5,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "allowFontScaling": false,
                      "name": "place",
                      "size": 12,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "title",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": "desc",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "fontSize": 10,
                    "padding": 5,
                  },
                },
                "ref": null,
                "rendered": "desc",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Button
                    iconName="directions"
                    onPress={[Function]}
                  />,
                  "style": Object {
                    "flexDirection": "row",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "iconName": "directions",
                    "onPress": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Component
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Button
                  iconName="location-off"
                  onPress={[Function]}
                />
                <Button
                  iconName="close"
                  onPress={[MockFunction]}
                />
              </Component>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    iconName="location-off"
                    onPress={[Function]}
                  />,
                  <Button
                    iconName="close"
                    onPress={[MockFunction]}
                  />,
                ],
                "style": Object {
                  "flexDirection": "row",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "iconName": "location-off",
                    "onPress": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "iconName": "close",
                    "onPress": [MockFunction],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`reacts to marker changes 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MarkerDetails
    marker={
      Object {
        "coordinates": Object {
          "latitude": 56.6,
          "longitude": 12.2,
        },
        "description": "desc 2",
        "id": "12",
        "title": "title 2",
      }
    }
    onClose={[MockFunction]}
    onRemove={[MockFunction]}
    onSetAsTarget={[MockFunction]}
    onSetAsWaypoint={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Component
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Component>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 14,
                "padding": 5,
              }
            }
          >
            <Icon
              allowFontScaling={false}
              name="place"
              size={12}
            />
            title 2
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontSize": 10,
                "padding": 5,
              }
            }
          >
            desc 2
          </Text>
          <Component
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Button
              iconName="directions"
              onPress={[Function]}
            />
          </Component>
        </Component>
        <Component>
          <Component
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Button
              iconName="location-off"
              onPress={[Function]}
            />
            <Button
              iconName="close"
              onPress={[MockFunction]}
            />
          </Component>
        </Component>
      </Component>,
      "style": Object {
        "backgroundColor": "rgba(255,255,255,0.8)",
        "padding": 10,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 14,
                  "padding": 5,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                name="place"
                size={12}
              />
              title 2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 10,
                  "padding": 5,
                }
              }
            >
              desc 2
            </Text>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="directions"
                onPress={[Function]}
              />
            </Component>
          </Component>,
          <Component>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="location-off"
                onPress={[Function]}
              />
              <Button
                iconName="close"
                onPress={[MockFunction]}
              />
            </Component>
          </Component>,
        ],
        "style": Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 14,
                    "padding": 5,
                  }
                }
              >
                <Icon
                  allowFontScaling={false}
                  name="place"
                  size={12}
                />
                title 2
              </Text>,
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 10,
                    "padding": 5,
                  }
                }
              >
                desc 2
              </Text>,
              <Component
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Button
                  iconName="directions"
                  onPress={[Function]}
                />
              </Component>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": Array [
                  <Icon
                    allowFontScaling={false}
                    name="place"
                    size={12}
                  />,
                  "title 2",
                ],
                "ellipsizeMode": "tail",
                "style": Object {
                  "fontSize": 14,
                  "padding": 5,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "allowFontScaling": false,
                    "name": "place",
                    "size": 12,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "title 2",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": "desc 2",
                "ellipsizeMode": "tail",
                "style": Object {
                  "fontSize": 10,
                  "padding": 5,
                },
              },
              "ref": null,
              "rendered": "desc 2",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Button
                  iconName="directions"
                  onPress={[Function]}
                />,
                "style": Object {
                  "flexDirection": "row",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "directions",
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="location-off"
                onPress={[Function]}
              />
              <Button
                iconName="close"
                onPress={[MockFunction]}
              />
            </Component>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  iconName="location-off"
                  onPress={[Function]}
                />,
                <Button
                  iconName="close"
                  onPress={[MockFunction]}
                />,
              ],
              "style": Object {
                "flexDirection": "row",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "location-off",
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "iconName": "close",
                  "onPress": [MockFunction],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Component
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <Component>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 14,
                  "padding": 5,
                }
              }
            >
              <Icon
                allowFontScaling={false}
                name="place"
                size={12}
              />
              title 2
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontSize": 10,
                  "padding": 5,
                }
              }
            >
              desc 2
            </Text>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="directions"
                onPress={[Function]}
              />
            </Component>
          </Component>
          <Component>
            <Component
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Button
                iconName="location-off"
                onPress={[Function]}
              />
              <Button
                iconName="close"
                onPress={[MockFunction]}
              />
            </Component>
          </Component>
        </Component>,
        "style": Object {
          "backgroundColor": "rgba(255,255,255,0.8)",
          "padding": 10,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 14,
                    "padding": 5,
                  }
                }
              >
                <Icon
                  allowFontScaling={false}
                  name="place"
                  size={12}
                />
                title 2
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "fontSize": 10,
                    "padding": 5,
                  }
                }
              >
                desc 2
              </Text>
              <Component
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Button
                  iconName="directions"
                  onPress={[Function]}
                />
              </Component>
            </Component>,
            <Component>
              <Component
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Button
                  iconName="location-off"
                  onPress={[Function]}
                />
                <Button
                  iconName="close"
                  onPress={[MockFunction]}
                />
              </Component>
            </Component>,
          ],
          "style": Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontSize": 14,
                      "padding": 5,
                    }
                  }
                >
                  <Icon
                    allowFontScaling={false}
                    name="place"
                    size={12}
                  />
                  title 2
                </Text>,
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontSize": 10,
                      "padding": 5,
                    }
                  }
                >
                  desc 2
                </Text>,
                <Component
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Button
                    iconName="directions"
                    onPress={[Function]}
                  />
                </Component>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": Array [
                    <Icon
                      allowFontScaling={false}
                      name="place"
                      size={12}
                    />,
                    "title 2",
                  ],
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "fontSize": 14,
                    "padding": 5,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "allowFontScaling": false,
                      "name": "place",
                      "size": 12,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "title 2",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "accessible": true,
                  "allowFontScaling": true,
                  "children": "desc 2",
                  "ellipsizeMode": "tail",
                  "style": Object {
                    "fontSize": 10,
                    "padding": 5,
                  },
                },
                "ref": null,
                "rendered": "desc 2",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Button
                    iconName="directions"
                    onPress={[Function]}
                  />,
                  "style": Object {
                    "flexDirection": "row",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "iconName": "directions",
                    "onPress": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Component
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Button
                  iconName="location-off"
                  onPress={[Function]}
                />
                <Button
                  iconName="close"
                  onPress={[MockFunction]}
                />
              </Component>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    iconName="location-off"
                    onPress={[Function]}
                  />,
                  <Button
                    iconName="close"
                    onPress={[MockFunction]}
                  />,
                ],
                "style": Object {
                  "flexDirection": "row",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "iconName": "location-off",
                    "onPress": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "iconName": "close",
                    "onPress": [MockFunction],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
